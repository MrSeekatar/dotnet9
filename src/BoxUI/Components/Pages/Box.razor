@rendermode InteractiveServer
@page "/box"
@using BoxUI.Services
@using Microsoft.AspNetCore.Server.Kestrel.Transport.Quic
@attribute [StreamRendering]
@inject IBoxService BoxService
@inject IJSRuntime JSRuntime

<PageTitle>Box</PageTitle>

<h1>Box</h1>

<p>This component demonstrates showing data.</p>

@if (boxes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var box in boxes)
        {
            <tr>
                <td>@box.Name</td>
                <td>
                <button @onclick="() => ShowBoxDetails(box)">Show Details</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private BoxServer.Models.Box[]? boxes;

    protected override async Task OnInitializedAsync()
    {
        boxes = (await BoxService.GetBoxes()).ToArray();
    }

    private async Task ShowBoxDetails(BoxServer.Models.Box box)
    {
        box = await BoxService.GetBox(box.BoxId!.Value);
        var boxDetails = $"ID: {box.BoxId}\nName: {box.Name}\nDescription: {box.Description}\nActive: {box.Active}\nCreated On: {box.CreatedOn.ToShortDateString()}";
        await JSRuntime.InvokeVoidAsync("alert", boxDetails);
    }
}